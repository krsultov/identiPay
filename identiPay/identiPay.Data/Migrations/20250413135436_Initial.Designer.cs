// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using identiPay.Data;

#nullable disable

namespace identiPay.Data.Migrations
{
    [DbContext(typeof(IdentiPayDbContext))]
    [Migration("20250413135436_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("identiPay.Core.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<Guid>("PayloadId")
                        .HasColumnType("uuid")
                        .HasColumnName("payload_id");

                    b.Property<string>("SenderDid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sender_did");

                    b.Property<string>("Signature")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("signature");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_transactions");

                    b.HasIndex("PayloadId")
                        .IsUnique()
                        .HasDatabaseName("ix_transactions_payload_id");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("identiPay.Core.Entities.TransactionPayload", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<string>("MetadataJson")
                        .HasColumnType("jsonb")
                        .HasColumnName("metadata_json");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<string>("RecipientDid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("recipient_did");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uuid")
                        .HasColumnName("transaction_id");

                    b.HasKey("Id")
                        .HasName("pk_transaction_payloads");

                    b.HasIndex("TransactionId")
                        .HasDatabaseName("ix_transaction_payloads_transaction_id");

                    b.ToTable("TransactionPayloads", (string)null);
                });

            modelBuilder.Entity("identiPay.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<string>("MetadataJson")
                        .HasColumnType("jsonb")
                        .HasColumnName("metadata_json");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<string>("PrimaryDid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("primary_did");

                    b.Property<string>("PrimaryPublicKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("primary_public_key");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("PrimaryDid")
                        .IsUnique()
                        .HasDatabaseName("ix_users_primary_did");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("identiPay.Core.Entities.Transaction", b =>
                {
                    b.HasOne("identiPay.Core.Entities.TransactionPayload", "Payload")
                        .WithOne()
                        .HasForeignKey("identiPay.Core.Entities.Transaction", "PayloadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transactions_transaction_payload_payload_id");

                    b.Navigation("Payload");
                });

            modelBuilder.Entity("identiPay.Core.Entities.TransactionPayload", b =>
                {
                    b.HasOne("identiPay.Core.Entities.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transaction_payloads_transactions_transaction_id");

                    b.Navigation("Transaction");
                });
#pragma warning restore 612, 618
        }
    }
}
